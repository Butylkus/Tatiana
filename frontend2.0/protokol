Данный документ описывает форматы и типы данных, а также логику работы с ними как основного скрипта, так и фронтенда.

ВАЖНО: ВСЕ настройки фронтенда должны находиться в едином файле settings.php и быть доступными для быстрой ручной правки с понятной логикой.


База данных основана на ТЕКСТОВЫХ ФАЙЛАХ. Их формат прост и понятен, но очень строг к каждому переносу строки и прочим, казалось, мелочам.

1. Файлы статусов
По умолчанию лежат в /home/pi/tatiana/status/
Внутри директории находятся текстовые файлы, имя файла соответствует УПРАВЛЯЕМОМУ ВЫХОДНОМУ пину.
Каждый файл содержит в себе только 1 и 0, никаких переносов и прочего, один голый байт.
==== Как с ними должен работать веб-интерфейс ====
Получить настроечный массив выходных пинов (settings.php: array($pin_name))
Поименовывать каждый пин при отрисовке управляющих элементов (кнопок) согласно этому и только этому массиву
Если произведён клик (тап) на управляющий элемент - смотрим в контексте шаблона - производить инверсию соответствующего статуса и записывать в файл новый статус (если было 0, то 1 и наоборот).
Сразу же записывать в общий лог новую строку (в конец) в надлежащем формате о произведённом действии, о чём далее.
кекекешенька: хоть и предстоит работать с кучей файлов в директории, рекурсия не нужна - все имена файлов уже в настроечном массиве как ключи.

==== Как с ними работает Татьяна ====
Управляющий скрипт собирает статусы и переводит их в физические величины для управления ведомыми устройствами: включает/выключает лампу, бойлер и тд.
Обязанность логирования действий с "веб-кнопками" лежит на ФРОНТЕНДЕ!


2. Файл лога
По умолчанию находится в корне рабочей директории Татьяны: /home/pi/tatiana/commonlog.txt

Лог работы устройств имеет следующий формат:
%EVENT% [%INPIN% >] %OUTPIN% > dd.mm.yyyy hh:mm:ss
По одной строке на событие. Этот файл используется ТОЛЬКО веб-интерфейсом, поэтому можно выдумать и свой, но важно: управляющий скрипт пишет именно в таком формате, поэтому менять его не стоит.
ВАЖНО: управляющий скрипт НЕ ИСПОЛЬЗУЕТ настроечный массив и пишет только НОМЕРА пинов, не именует их!
При отрисовке плана в браузере каждый %ПАТТЕРН% заменяется на:
%EVENT% - тег <img> с соответствующим файлом из директории ../images/, имена файлов прозрачно намекают на свой паттерн (WEBON.png, например)
%INPIN% - согласно key>value настроечного массива входных пинов (например, $input_pin[21]="Выключатель люстры зала")
%OUTPIN% - согласно key>value настроечного массива выходных пинов (например, $pin_name[27]="Люстра в зале") (вообще-то этот массив надо бы переименовать...)


Типы событий, используемые сейчас, а также зарезервированные на будущее:

система:
%UP% > dd.mm.yyyy hh:mm:ss #сообщение о старте управляющего скрипта
%DOWN% > dd.mm.yyyy hh:mm:ss #сообщение о нормальном останове управляющего скрипта

устройства:
%WEBON% %OUTPIN% > dd.mm.yyyy hh:mm:ss #Сообщение о ВКЛючении через веб-интерфейс устройства на пине %OUTPIN%
%WEBOFF% %OUTPIN% > dd.mm.yyyy hh:mm:ss #Сообщение о ВЫКЛючении через веб-интерфейс устройства на пине %OUTPIN%
%PLANON% %OUTPIN% > dd.mm.yyyy hh:mm:ss #Сообщение о ВКЛючении по плану устройства на пине %OUTPIN%
%PLANOFF% %OUTPIN% > dd.mm.yyyy hh:mm:ss #Сообщение о ВЫКЛючении по плану устройства на пине %OUTPIN%
%BUTTONON% %INPIN% > %OUTPIN% > dd.mm.yyyy hh:mm:ss #Сообщение о ВКЛючении через КНОПКУ на пине %INPIN% устройства на пине %OUTPIN%
%BUTTONOFF% %INPIN% > %OUTPIN% > dd.mm.yyyy hh:mm:ss # Сообщение о ВыКЛючении через КНОПКУ на пине %INPIN% устройства на пине %OUTPIN%
(для обоих и последующих с указанием %INPIN% - в файле конфигурации предусмотрено создание массива входных устройств для человекопонятного именования - [1]="кнопка в ванной",[13]="ИК-порт в прихожей")

зарезервировано (для последующего внедрения):
%IRON% %INPIN% > %OUTPIN% > dd.mm.yyyy hh:mm:ss #Сообщение о ВКЛючении через ИК-ПУЛЬТ на пине %INPIN% устройства на пине %OUTPIN%
%IROFF% %INPIN% > %OUTPIN% > dd.mm.yyyy hh:mm:ss # Сообщение о ВыКЛючении через ИК-ПУЛЬТ на пине %INPIN% устройства на пине %OUTPIN%


==== Как с ним должен работать веб-интерфейс ====
Получить настроечный массив выходных пинов (settings.php: array($pin_name)) и входных (блин, допиши его!)
Поименовывать каждый пин при отрисовке событий согласно этому и только этому массиву
По факту морда только читает лог и переводит его на понятный человеку язык, бэк-енд же, в свою очередь, пишет в лог свои сообщения, например, %WEBOFF%.
Дя того морда и создана - следить за ситуацией с устройствами и давать понятное представление, в отличие от базового формата.

==== Как с ним работает Татьяна ====
Татьяна его только пишет в заданном формате. Другие скрипты (ик-декодер, дайвер экрана, иные) тоже.




3. Файл плана
Файл РАБОЧЕГО плана по умолчанию находится в директории /home/pi/tatiana/plans/ и называется plan.txt.
Директория для планОВ изначально создана для жонглирования различными планами.
Например, можно создать несколько планов на все случаи жизни (имитация присутствия в доме - включение и выключение света в тёмное время суток без участия хозяина) и при необходимости сбрасывать их в главнй план (plan.txt), поскольку Татьяна работает только с ОДНИМ ЭТИМ файлом. Разумеется, старый план надо сохранять для последующего восстановления (уезжаю, включить пассивную охранку; приехал, вернуться к старому плану).

Формат плана:
%OUTPIN%>hh:mm:ss<hh:mm:ss 
27>13:39:10<13:56:11

Первая строка общий формат, вторая - пример реального плана.
ПИН>время_ВКЛючения<время_ВЫКЛючения

Пробелы недопустимы. Устройство - строго НОМЕР пина ВЫХОДНОГО устройства ($pin_name[27])

ТуДу: защита от идиота - если в плане есть строка для пина, не заданного настроечным массивом как строго выходной, ИГНОРИРОВАТЬ. Если пин в настроечном массиве ВХодных пинов - вывести в произвольном формате предупреждение о душевной болезни и немедленно удалить строку с безобразием.


==== Как с ним должен работать веб-интерфейс ====
Получить настроечный массив выходных пинов (settings.php: array($pin_name))
Поименовывать каждый пин при отрисовке событий согласно этому и только этому массиву
При отрисовке текущего плана желательно иметь возможность редактировать его налету (добавлять строки и удалять их) или переключиться на другой план.
Желательно, чтобы веб-интерфейс (точнее парсер файла) имел хоть какую-то защиту от идиота - см. далее.

==== Как с ним работает Татьяна ====
Татьяна его только читает и крайне чувствительна к формату. Если к ней прилетит неформат, в лучшем случае строка будет проигнорирована, но чаще всего Татьяна упадёт. Защиту от идиота здесь сделать сложноя, как нельзя запретить пользователю попытаться выполнить команду "хуй" в терминале. Однако есть вариант как мнимум сверяться с настроечным массивом и автоматически рубить всё ненастроенное, а также изначально выводить в форме добавления строки ТОЛЬКО для заданных настреочным массивом устройств. Скажем, если пин 5 не занят ни как входной, ни как выходной, то его в выпадающем списке устройств просто быть не может. Если же попытаться запилить это вручную, при первом же обходе парсеров веб-интерфейса это безобразие моментально удаляется.
Для Татьяны не имеет значения порядок строк, если сейчас пришло время действия из десятой строки, она выполнит это действие, а в следющую секунду примется, например, за третью.
